# Generated by Django 4.1.5 on 2023-01-15 17:58

import budgets.infrastructure.models.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Budget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budgets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(
                budgets.infrastructure.models.mixins.CreateAndUpdateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="BudgetMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("accepted", models.BooleanField(default=False)),
                (
                    "budget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shared_users",
                        to="budgets.budget",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shared_budgets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(
                budgets.infrastructure.models.mixins.CreateAndUpdateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="BudgetBalanceChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=8)),
                ("description", models.CharField(max_length=256)),
                (
                    "type",
                    models.CharField(
                        choices=[("INCOME", "INCOME"), ("EXPENSE", "EXPENSE")],
                        max_length=8,
                    ),
                ),
                (
                    "budget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_changes",
                        to="budgets.budget",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(
                budgets.infrastructure.models.mixins.CreateAndUpdateMixin,
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name="budget",
            name="user_members",
            field=models.ManyToManyField(
                related_name="shard_budgets",
                through="budgets.BudgetMembership",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
